gather(key = "RPunkt", value = "BtnConfig", select(data_time_config, starts_with('R')))
rlang::last_error()
data_time_config_long <- data_time_config %>%
gather(key = "Z", value = "Time in ms", select(data_time_config, starts_with('Z'))) %>%
#convert_as_factor("Zeitpunkt") %>%
gather(key = "R", value = "Reaction", select(data_time_config, starts_with('R')))
data_time_config_long <- data_time_config %>%
# add row numbers as we need them to keep the order
dplyr::mutate(rn = dplyr::row_number()) %>%
# gather is depricated
tidyr::pivot_longer(-rn, names_to = "colu", values_to = "vals") %>%
# extract number from the column names that now are a column as we need them to keep the order also
dplyr::mutate(nr = readr::parse_number(colu))
data_time_config_long <- data_time_config %>%
# add row numbers as we need them to keep the order
dplyr::mutate(rn = dplyr::row_number()) %>%
# gather is depricated
tidyr::pivot_longer(-rn, names_to = "colu", values_to = "vals") %>%
# extract number from the column names that now are a column as we need them to keep the order also
dplyr::mutate(nr = readr::parse_number(colu))
data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "Z")) %>%
dplyr::left_join(idf %>%
dplyr::filter(stringr::str_detect(colu, "R")), by = c("rn", "nr")) %>%
# order to get the exact output you are looking for
dplyr::arrange(nr) %>%
# select and rename to get exactout put you a looking vor
dplyr::select(Z = colu.x, `Time in ms` = vals.x, R = colu.y, Reaction = vals.y)
data_time_config_long <- data_time_config %>%
# add row numbers as we need them to keep the order
dplyr::mutate(rn = dplyr::row_number()) %>%
# gather is depricated
tidyr::pivot_longer(-rn, names_to = "colu", values_to = "vals") %>%
# extract number from the column names that now are a column as we need them to keep the order also
dplyr::mutate(nr = readr::parse_number(colu))
data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "Z")) %>%
dplyr::left_join(data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "R")), by = c("rn", "nr")) %>%
# order to get the exact output you are looking for
dplyr::arrange(nr) %>%
# select and rename to get exactout put you a looking vor
dplyr::select(Z = colu.x, `Time in ms` = vals.x, R = colu.y, Reaction = vals.y)
data_time_config_long <- data_time_config %>%
# add row numbers as we need them to keep the order
dplyr::mutate(rn = dplyr::row_number()) %>%
# gather is depricated
tidyr::pivot_longer(-rn, names_to = "colu", values_to = "vals") %>%
# extract number from the column names that now are a column as we need them to keep the order also
dplyr::mutate(nr = readr::parse_number(colu))
data_time_config_long <- data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "Z")) %>%
dplyr::left_join(data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "R")), by = c("rn", "nr")) %>%
# order to get the exact output you are looking for
dplyr::arrange(nr) %>%
# select and rename to get exactout put you a looking vor
dplyr::select(Z = colu.x, `Time in ms` = vals.x, R = colu.y, Reaction = vals.y)
source("util.R")
knitr::opts_chunk$set(echo = TRUE)
source("util.R")
knitr::opts_chunk$set(echo = TRUE)
View(create_histogram_percent)
View(create_histogram_percent)
source("util.R")
knitr::opts_chunk$set(echo = TRUE)
create.histogram.percent(data_ishiharaclean, Geschlecht, "Geschlechterverteilung")
create.histogram.percent(data_ishiharaclean, "Geschlecht", "Geschlechterverteilung")
source("util.R")
knitr::opts_chunk$set(echo = TRUE)
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
source("util.R")
knitr::opts_chunk$set(echo = TRUE)
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
View(data_ic_1120)
View(data_ishiharaclean)
View(data_ishiharaclean)
create.histogram.percent(data_ishiharaclean, ~OS, "Verteilung Betriebssystem")
create.histogram.percent(data_ishiharaclean, ~OS, "Verteilung Betriebssystem")
create.histogram.percent(data_ishiharaclean, ~Alter, "Altersverteilung")
create.histogram.percent(data_ishiharaclean, ~Datum, "Datum")
create.histogram.percent(data_ishiharaclean, ~Smartphone_Nutzung, "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, ~Smartphone Nutzung, "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, ~Smartphone-Nutzung, "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, ~"Smartphone Nutzung", "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, "Smartphone Nutzung", "Smartphone Nutzung")
View(data_time_config_long)
View(data)
View(data_ic_ss)
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung', "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung', "Smartphone Nutzungserfahrung")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
#Filenamen anpassen
Daten_orig <- read_csv("Daten/Daten_n49.csv",
col_types = cols(Datum = col_date(format = "%d.%m.%Y"),
Uhrzeit = col_time(format = "%H:%M"),
Geschlecht = col_factor(levels = c("f",
"m")), Alter = col_factor(levels = c("unter 11",
"11-20", "21-30", "31-40", "41-50",
"51-60", "über 60")), OS = col_factor(levels = c("iOS",
"Android")), `Smartphone Nutzung` = col_factor(levels = c("mehrmals täglich",
"täglich", "mehrmals die Woche")),
`Smartphone Nutzungserfahrung` = col_factor(levels = c("sehr sicher",
"sicher", "mittelmäßig", "unsicher",
"sehr unsicher")), `Zeit gesamt` = col_time(format = "%H:%M:%OS")))
data <- Daten_orig
#View(data)
data_ishiharaclean <-subset(data, data$`Ishihara 3` == 3 & data$`Ishihara 42` == 42 & data$`Ishihara Linien`== 'keine')
data_ishiharaclean <- data_ishiharaclean
data_ishiharaclean <-subset(data, data$`Ishihara 3` == 3 & data$`Ishihara 42` == 42 & data$`Ishihara Linien`== 'keine')
data_ishiharaclean <- data_ishiharaclean
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
create.histogram.percent(data_ishiharaclean, ~OS, "Verteilung Betriebssystem")
create.histogram.percent(data_ishiharaclean, ~Alter, "Altersverteilung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung', "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung', "Smartphone Nutzungserfahrung")
data_ishiharaclean <-subset(data, data$`Ishihara 3` == 3 & data$`Ishihara 42` == 42 & data$`Ishihara Linien`== 'keine')
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
data_ishiharaclean <-subset(data, data$'Ishihara 3' == 3 & data$'Ishihara 42' == 42 & data$'Ishihara Linien'== 'keine')
library(readr)
#Filenamen anpassen
Daten_orig <- read_csv("Daten/Daten_n49.csv",
col_types = cols(Datum = col_date(format = "%d.%m.%Y"),
Uhrzeit = col_time(format = "%H:%M"),
Geschlecht = col_factor(levels = c("f",
"m")), Alter = col_factor(levels = c("unter 11",
"11-20", "21-30", "31-40", "41-50",
"51-60", "über 60")), OS = col_factor(levels = c("iOS",
"Android")), `Smartphone Nutzung` = col_factor(levels = c("mehrmals täglich",
"täglich", "mehrmals die Woche")),
`Smartphone Nutzungserfahrung` = col_factor(levels = c("sehr sicher",
"sicher", "mittelmäßig", "unsicher",
"sehr unsicher")), `Zeit gesamt` = col_time(format = "%H:%M:%OS")))
data <- Daten_orig
#View(data)
data_ishiharaclean <-subset(data, data$`Ishihara 3` == 3 & data$`Ishihara 42` == 42 & data$`Ishihara Linien`== 'keine')
source("util.R")
source(Data_Subsets.Rmd)
source("util.R")
source("Data_Subsets.Rmd")
View(Daten_orig)
source("util.R")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
#Filenamen anpassen
Daten_orig <- read_csv("Daten/Daten_n49.csv",
col_types = cols(Datum = col_date(format = "%d.%m.%Y"),
Uhrzeit = col_time(format = "%H:%M"),
Geschlecht = col_factor(levels = c("f",
"m")), Alter = col_factor(levels = c("unter 11",
"11-20", "21-30", "31-40", "41-50",
"51-60", "über 60")), OS = col_factor(levels = c("iOS",
"Android")), `Smartphone Nutzung` = col_factor(levels = c("mehrmals täglich",
"täglich", "mehrmals die Woche")),
`Smartphone Nutzungserfahrung` = col_factor(levels = c("sehr sicher",
"sicher", "mittelmäßig", "unsicher",
"sehr unsicher")), `Zeit gesamt` = col_time(format = "%H:%M:%OS")))
data <- Daten_orig
#View(data)
data_ishiharaclean <-subset(data, data$`Ishihara 3` == 3 & data$`Ishihara 42` == 42 & data$`Ishihara Linien`== 'keine')
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
create.histogram.percent(data_ishiharaclean, ~OS, "Verteilung Betriebssystem")
create.histogram.percent(data_ishiharaclean, ~Alter, "Altersverteilung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung', "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung', "Smartphone Nutzungserfahrung")
library(readr)
#Filenamen anpassen
Daten_orig <- read_csv("Daten/Daten_n49.csv",
col_types = cols(Datum = col_date(format = "%d.%m.%Y"),
Uhrzeit = col_time(format = "%H:%M"),
Geschlecht = col_factor(levels = c("f",
"m")), Alter = col_factor(levels = c("unter 11",
"11-20", "21-30", "31-40", "41-50",
"51-60", "über 60")), OS = col_factor(levels = c("iOS",
"Android")), `Smartphone Nutzung` = col_factor(levels = c("mehrmals täglich",
"täglich", "mehrmals die Woche")),
`Smartphone Nutzungserfahrung` = col_factor(levels = c("sehr sicher",
"sicher", "mittelmäßig", "unsicher",
"sehr unsicher")), `Zeit gesamt` = col_time(format = "%H:%M:%OS")))
data <- Daten_orig
#View(data)
data_ishiharaclean <-subset(data, data$`Ishihara 3` == 3 & data$`Ishihara 42` == 42 & data$`Ishihara Linien`== 'keine')
data_time_config <- data_ishiharaclean
data_time_config <-data_time_config %>% select(-("Datum":"Ishihara Dauer"))
data_time_config_long <- data_time_config %>%
# add row numbers as we need them to keep the order
dplyr::mutate(rn = dplyr::row_number()) %>%
# gather is depricated
tidyr::pivot_longer(-rn, names_to = "colu", values_to = "vals") %>%
# extract number from the column names that now are a column as we need them to keep the order also
dplyr::mutate(nr = readr::parse_number(colu))
data_time_config_long <- data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "Z")) %>%
dplyr::left_join(data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "R")), by = c("rn", "nr")) %>%
# order to get the exact output you are looking for
dplyr::arrange(nr) %>%
# select and rename to get exactout put you a looking vor
dplyr::select(Z = colu.x, `Time in ms` = vals.x, R = colu.y, Reaction = vals.y)
data_time_config <- data_ishiharaclean
data_time_config <-data_time_config %>% select(-("Datum":"Ishihara Dauer"))
data_time_config_long <- data_time_config %>%
# add row numbers as we need them to keep the order
dplyr::mutate(rn = dplyr::row_number()) %>%
# gather is depricated
tidyr::pivot_longer(-rn, names_to = "colu", values_to = "vals") %>%
# extract number from the column names that now are a column as we need them to keep the order also
dplyr::mutate(nr = readr::parse_number(colu))
data_time_config_long <- data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "Z")) %>%
dplyr::left_join(data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "R")), by = c("rn", "nr")) %>%
# order to get the exact output you are looking for
dplyr::arrange(nr) %>%
# select and rename to get exactout put you a looking vor
dplyr::select(Z = colu.x, `Time in ms` = vals.x, R = colu.y, Reaction = vals.y)
library(knitr)
kable(data_time_config_long)
knitr::kable(head(data_time_config_long))
View(data_time_config_long)
View(data_time_config_long)
data_time_config_1 <- subset(data_time_config_long, ~Reaction == 1)
data_time_config_1 <- subset(data_time_config_long, data_time_config_long$Reaction == 1)
View(data_time_config_1)
data_time_config_1 <- subset(data_time_config_long, data_time_config_long$Reaction == 1)
data_time_config_2 <- subset(data_time_config_long, data_time_config_long$Reaction == 2)
data_time_config_3 <- subset(data_time_config_long, data_time_config_long$Reaction == 3)
data_time_config_4 <- subset(data_time_config_long, data_time_config_long$Reaction == 4)
data_time_config_5 <- subset(data_time_config_long, data_time_config_long$Reaction == 5)
data_time_config_6 <- subset(data_time_config_long, data_time_config_long$Reaction == 6)
data_time_config_7 <- subset(data_time_config_long, data_time_config_long$Reaction == 7)
data_time_config_8 <- subset(data_time_config_long, data_time_config_long$Reaction == 8)
View(data_time_config_8)
View(data_time_config_8)
View(data_time_config_1)
View(data_time_config_1)
fig <- plot_ly(y = data_time_config_1$`Time in ms`, type = "box")
fig
fig <- plot_ly(y = data_time_config_1$`Time in ms`, type = "box")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`)
fig
fig <- plot_ly(y = data_time_config_1$`Time in ms`, type = "box")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`)
fig
fig <- plot_ly(y = data_time_config_1$`Time in ms`, type = "box")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`)
fig
fig <- plot_ly(y = data_time_config_1$`Time in ms`, type = "box")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`)
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms %"),
title = "Boxplots"
)
fig
fig <- plot_ly(y = data_time_config_1$`Time in ms`, type = "box", name="1")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`, name="2")
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`, name="3")
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`, name="4")
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`, name="5")
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`, name="6")
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`, name="7")
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`, name="8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms %"),
title = "Boxplots"
)
fig
fig <- plot_ly(y = data_time_config_1$`Time in ms`, type = "box", name="1")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`, name="2")
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`, name="3")
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`, name="4")
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`, name="5")
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`, name="6")
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`, name="7")
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`, name="8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms %"),
title = "Boxplots"
)
fig
fig <- plot_ly(y = data_time_config_1$`Time in ms`, type = "box")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`)
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms %"),
title = "Boxplots"
)
fig
fig <- plot_ly(y = data_time_config_1$`Time in ms`, type = "box")
fig <- fig %>% add_trace(y = data_time_config_1$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`)
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms %"),
title = "Boxplots"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_1$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`)
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`)
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms %"),
title = "Boxplots"
)
fig
View(data_time_config_6)
View(data_time_config_2)
fig <- plot_ly(data = data_ishiharaclean,
x = ~Geschlecht,
y = ~Richtig,
type = "histogram"
)
fig
fig <- plot_ly(data = data_ishiharaclean,
x = ~Geschlecht,
y = ~Richtig,
)
fig <- plot_ly(data = data_ishiharaclean,
x = ~Geschlecht,
y = ~Richtig)
fig
fig <- plot_ly(data = data_ishiharaclean,
x = ~Geschlecht,
y = ~Richtig, histnorm = "percent")
fig
View(data_ic_m)
View(data_ic_m)
View(data_ic_f)
View(data_ic_f)
View(data_ic_m)
View(data_ic_m)
fig <- plot_ly(data = data_ishiharaclean,
x = ~Geschlecht,
y = ~Richtig, histfunc='avg', type="histogram")
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="histogram")
fig <- fig %>% add_trace(data = data_ic_m$Richtig)
fig <- fig %>% add_trace(data = data_ic_f$Richtig)
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="histogram")
fig <- fig %>% add_trace(data = data_ic_m$Richtig, histfunc='avg')
fig <- fig %>% add_trace(data = data_ic_f$Richtig, histfunc='avg')
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="histogram")
fig <- fig %>% add_trace(data = data_ic_m$Richtig, histfunc='avg')
#fig <- fig %>% add_trace(data = data_ic_f$Richtig, histfunc='avg')
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="histogram")
fig <- fig %>% add_trace(data = data_ic_m$Richtig, histfunc='sum')
#fig <- fig %>% add_trace(data = data_ic_f$Richtig, histfunc='avg')
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="histogram")
fig <- fig %>% add_trace(x = data_ic_m$Richtig, histfunc='avg')
fig <- fig %>% add_trace(x = data_ic_f$Richtig, histfunc='avg')
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="histogram")
fig <- fig %>% add_trace(x = data_ic_m$Richtig, histfunc='avg', name="m")
fig <- fig %>% add_trace(x = data_ic_f$Richtig, histfunc='avg', name="f")
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="histogram")
fig <- fig %>% add_trace(x = data_ic_m$Richtig, histfunc='sum', name="m")
fig <- fig %>% add_trace(x = data_ic_f$Richtig, histfunc='sum', name="f")
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="histogram")
fig <- fig %>% add_trace(y = data_ic_m$Richtig, histfunc='sum', name="m")
fig <- fig %>% add_trace(y = data_ic_f$Richtig, histfunc='sum', name="f")
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="bar")
fig <- fig %>% add_trace(y = data_ic_m$Richtig, histfunc='sum', name="m")
fig <- fig %>% add_trace(y = data_ic_f$Richtig, histfunc='sum', name="f")
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type="bar")
fig <- fig %>% add_trace(y = data_ic_m$Richtig, name="m")
fig <- fig %>% add_trace(y = data_ic_f$Richtig, name="f")
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`)
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`)
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`, name="w")
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Geschlecht"
)
fig
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Geschlecht"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Falsch`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Falsch`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl falsch beantworteter Aufgaben"),
title = "Verteilung falscher Aufgaben nach Geschlecht"
)
fig
data_ic_iOS <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'iOS')
data_ic_Android <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'Android')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_iOS$`Richtig`, name= "iOS")
fig <- fig %>% add_trace(y = data_ic_Android$`Richtig`, name="Android")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Betriebssystem"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_1$`Time in ms`, name="1")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`, name="2")
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`, name="3")
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`, name="4")
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`, name="5")
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`, name="6")
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`, name="7")
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`, name="8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms %"),
title = "Boxplots"
)
fig
View(data_time_config_long)
data_ic_iOS <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'iOS')
data_ic_Android <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'Android')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_iOS$`Richtig`, name= "iOS")
fig <- fig %>% add_trace(y = data_ic_Android$`Richtig`, name="Android")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Betriebssystem"
)
fig
View(data_time_config)
View(data_time_config)
#Millisekunden
plot(mean_tpt_iOS,type= "l", main = "Durschnittliche Dauer der Aufgaben nach Betriebssystem", ylab= "Zeit in Millisekunden", xlab = "Aufgaben")
lines(mean_tpt_Android, type= "l", col = "blue")
#Sekunden
plot(mean_tptr_iOS,type= "l", main = "Durschnittliche Dauer der Aufgaben nach Betriebssystem", ylab= "Zeit in Sekunden", xlab = "Aufgaben")
lines(mean_tptr_Android, type= "l", col = "blue")
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
create.histogram.percent(data_ishiharaclean, ~OS, "Verteilung Betriebssystem")
View(get_tptfv)
