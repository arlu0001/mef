<<<<<<< Updated upstream
data_time_config_7 <- subset(data_time_config_7, data_time_config_7$`Time in ms` <= 6000)
data_time_config_8 <- subset(data_time_config_8, data_time_config_8$`Time in ms` <= 6000)
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_1$`Time in ms`, name="1")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`, name="2")
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`, name="3")
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`, name="4")
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`, name="5")
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`, name="6")
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`, name="7")
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`, name="8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms"),
title = "Boxplots"
)
fig
data_time_config_100 <- data_ishiharaclean
data_time_config_100 <- subset(data_time_config_100, data_time_config_100$Richtig == 100)
data_time_config_100 <- data_time_config_100 %>% select(-("Datum":"Ishihara Dauer"))
data_time_config_100[data_time_config_100 == 2] <- 6
data_time_config_long_100 <- wideToLongTable(data_time_config_100)
data_time_config_long_100$Reaction <- as.factor(data_time_config_long_100$Reaction)
data_time_config_100_1 <- subset(data_time_config_long_100, data_time_config_long_100$Reaction == 1)
data_time_config_100_3 <- subset(data_time_config_long_100, data_time_config_long_100$Reaction == 3)
data_time_config_100_6 <- subset(data_time_config_long_100, data_time_config_long_100$Reaction == 6)
data_time_config_100_8 <- subset(data_time_config_long_100, data_time_config_long_100$Reaction == 8)
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_100_1$`Time in ms`, name="Config 1")
fig <- fig %>% add_trace(y = data_time_config_100_3$`Time in ms`, name="Config 3")
fig <- fig %>% add_trace(y = data_time_config_100_6$`Time in ms`, name="Config 6")
fig <- fig %>% add_trace(y = data_time_config_100_8$`Time in ms`, name="Config 8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms"),
title = "Boxplots 100 richtig"
)
fig
data_time_config_100_1 <- subset(data_time_config_long_100_1, data_time_config_long_100_1$`Time in ms` <= 6000)
data_time_config_100_1 <- subset(data_time_config_100_1, data_time_config_long_100_1$`Time in ms` <= 6000)
data_time_config_100_1 <- subset(data_time_config_100_1, data_time_config_100_1$`Time in ms` <= 6000)
data_time_config_100_3 <- subset(data_time_config_100_3, data_time_config_long_3$`Time in ms` <= 6000)
data_time_config_100_1 <- subset(data_time_config_100_1, data_time_config_100_1$`Time in ms` <= 6000)
data_time_config_100_3 <- subset(data_time_config_100_3, data_time_config_100_3$`Time in ms` <= 6000)
data_time_config_100_6 <- subset(data_time_config_100_6, data_time_config_100_6$`Time in ms` <= 6000)
data_time_config_100_8 <- subset(data_time_config_100_8, data_time_config_100_8$`Time in ms` <= 6000)
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_100_1$`Time in ms`, name="Config 1")
fig <- fig %>% add_trace(y = data_time_config_100_3$`Time in ms`, name="Config 3")
fig <- fig %>% add_trace(y = data_time_config_100_6$`Time in ms`, name="Config 6")
fig <- fig %>% add_trace(y = data_time_config_100_8$`Time in ms`, name="Config 8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms"),
title = "Boxplots 100 richtig"
)
fig
summary(cars)
plot(cars)
library(plotly)
fig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)
fig
First Slide
========================================================
install.packages("rmarkdown")
library(plotly)
fig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)
=======
fig <- plot_ly(data=data_ishiharaclean, y = ~mean_tptr_f, type = 'bar', name = 'Frauen')
fig <- fig %>% add_trace(y = ~mean_tptr_m, name = 'Männer')
#fig <- add_trace(fig,
#     x = values,
#     y = fitted(lm(x ~ mean_tptr_m, data_ishiharaclean)),
#     mode = "lines"
#     )
fig <- fig %>% layout(
title = "Männer vs.Frauen",
xaxis = list(title = "Aufgaben"),
yaxis = list(title = 'Durchschnitt'),
barmode = 'group')
>>>>>>> Stashed changes
fig
knitr::opts_chunk$set(echo = FALSE)
library(plotly)
fig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)
fig
View(fig)
View(fig)
library(plotly)
fig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = "scatter")
fig
library(plotly)
fig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = "scatter", mode="markers")
fig
library(plotly)
fig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = "scatter", mode="markers")
fig
=======
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "1"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "2"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "3"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "4"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "5"])
#shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "6"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "7"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "8"])
library(car)
#leveneTest(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction)
summary(aov(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction))
data_time_config_long$Reaction <- as.factor(data_time_config_long$Reaction)
TukeyHSD(aov(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction))
shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "1"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "2"])
shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "3"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "4"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "5"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long$Reaction == "6"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "7"])
shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "8"])
library(car)
#leveneTest(data_time_config_long_100$`Time in ms` ~ data_time_config_long_100$Reaction)
summary(aov(data_time_config_long_100$`Time in ms` ~ data_time_config_long_100$Reaction))
data_time_config_long_100$Reaction <- as.factor(data_time_config_long_100$Reaction)
TukeyHSD(aov(data_time_config_long_100$`Time in ms` ~ data_time_config_long_100$Reaction))
shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "1"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "2"])
shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "3"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "4"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "5"])
shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long$Reaction == "6"])
>>>>>>> 607671c2a8a07cf2b74d9f3c94d8cab7444e1473
source("Skripte/import.R")
source("Skripte/subsets_erstellen.R")
source("Skripte/all_tpt.R")
source("Skripte/util.R")
knitr::opts_chunk$set(echo = TRUE)
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
create.histogram.percent(data_ishiharaclean, ~OS, "Verteilung Betriebssystem")
create.histogram.percent(data_ishiharaclean, ~Alter, "Altersverteilung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung', "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung', "Smartphone Nutzungserfahrung")
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Geschlecht"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Falsch`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Falsch`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl falsch beantworteter Aufgaben"),
title = "Verteilung falscher Aufgaben nach Geschlecht"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Geschlecht"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_iOS$`Richtig`, name= "iOS")
fig <- fig %>% add_trace(y = data_ic_Android$`Richtig`, name="Android")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Betriebssystem"
)
fig
data_time_config <- data_ishiharaclean
data_time_config <-data_time_config %>% select(-("Datum":"Ishihara Dauer"))
data_time_config_long <- data_time_config %>%
# add row numbers as we need them to keep the order
dplyr::mutate(rn = dplyr::row_number()) %>%
# gather is depricated
tidyr::pivot_longer(-rn, names_to = "colu", values_to = "vals") %>%
# extract number from the column names that now are a column as we need them to keep the order also
dplyr::mutate(nr = readr::parse_number(colu))
data_time_config_long <- data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "Z")) %>%
dplyr::left_join(data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "R")), by = c("rn", "nr")) %>%
# order to get the exact output you are looking for
dplyr::arrange(nr) %>%
# select and rename to get exactout put you a looking vor
dplyr::select(Z = colu.x, `Time in ms` = vals.x, R = colu.y, Reaction = vals.y)
knitr::kable(head(data_time_config_long))
data_time_config_1 <- subset(data_time_config_long, data_time_config_long$Reaction == 1)
data_time_config_2 <- subset(data_time_config_long, data_time_config_long$Reaction == 2)
data_time_config_3 <- subset(data_time_config_long, data_time_config_long$Reaction == 3)
data_time_config_4 <- subset(data_time_config_long, data_time_config_long$Reaction == 4)
data_time_config_5 <- subset(data_time_config_long, data_time_config_long$Reaction == 5)
data_time_config_6 <- subset(data_time_config_long, data_time_config_long$Reaction == 6)
data_time_config_7 <- subset(data_time_config_long, data_time_config_long$Reaction == 7)
data_time_config_8 <- subset(data_time_config_long, data_time_config_long$Reaction == 8)
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_1$`Time in ms`, name="1")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`, name="2")
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`, name="3")
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`, name="4")
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`, name="5")
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`, name="6")
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`, name="7")
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`, name="8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms"),
title = "Boxplots"
)
fig
data_time_config_1 <- subset(data_time_config_1, data_time_config_1$`Time in ms` <= 6000)
data_time_config_2 <- subset(data_time_config_2, data_time_config_2$`Time in ms` <= 6000)
data_time_config_3 <- subset(data_time_config_3, data_time_config_3$`Time in ms` <= 6000)
data_time_config_4 <- subset(data_time_config_4, data_time_config_4$`Time in ms` <= 6000)
data_time_config_5 <- subset(data_time_config_5, data_time_config_5$`Time in ms` <= 6000)
data_time_config_6 <- subset(data_time_config_6, data_time_config_6$`Time in ms` <= 6000)
data_time_config_7 <- subset(data_time_config_7, data_time_config_7$`Time in ms` <= 6000)
data_time_config_8 <- subset(data_time_config_8, data_time_config_8$`Time in ms` <= 6000)
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_1$`Time in ms`, name="1")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`, name="2")
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`, name="3")
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`, name="4")
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`, name="5")
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`, name="6")
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`, name="7")
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`, name="8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms"),
title = "Boxplots"
)
fig
data_time_config_100 <- data_ishiharaclean
data_time_config_100 <- subset(data_time_config_100, data_time_config_100$Richtig == 100)
data_time_config_100 <- data_time_config_100 %>% select(-("Datum":"Ishihara Dauer"))
data_time_config_100[data_time_config_100 == 2] <- 6
data_time_config_long_100 <- wideToLongTable(data_time_config_100)
data_time_config_long_100$Reaction <- as.factor(data_time_config_long_100$Reaction)
data_time_config_100_1 <- subset(data_time_config_long_100, data_time_config_long_100$Reaction == 1)
data_time_config_100_3 <- subset(data_time_config_long_100, data_time_config_long_100$Reaction == 3)
data_time_config_100_6 <- subset(data_time_config_long_100, data_time_config_long_100$Reaction == 6)
data_time_config_100_8 <- subset(data_time_config_long_100, data_time_config_long_100$Reaction == 8)
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_100_1$`Time in ms`, name="Config 1")
fig <- fig %>% add_trace(y = data_time_config_100_3$`Time in ms`, name="Config 3")
fig <- fig %>% add_trace(y = data_time_config_100_6$`Time in ms`, name="Config 6")
fig <- fig %>% add_trace(y = data_time_config_100_8$`Time in ms`, name="Config 8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms"),
title = "Boxplots 100 richtig"
)
fig
data_time_config_100_1 <- subset(data_time_config_100_1, data_time_config_100_1$`Time in ms` <= 6000)
data_time_config_100_3 <- subset(data_time_config_100_3, data_time_config_100_3$`Time in ms` <= 6000)
data_time_config_100_6 <- subset(data_time_config_100_6, data_time_config_100_6$`Time in ms` <= 6000)
data_time_config_100_8 <- subset(data_time_config_100_8, data_time_config_100_8$`Time in ms` <= 6000)
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_100_1$`Time in ms`, name="Config 1")
fig <- fig %>% add_trace(y = data_time_config_100_3$`Time in ms`, name="Config 3")
fig <- fig %>% add_trace(y = data_time_config_100_6$`Time in ms`, name="Config 6")
fig <- fig %>% add_trace(y = data_time_config_100_8$`Time in ms`, name="Config 8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms"),
title = "Boxplots 100 richtig"
)
fig
<<<<<<< HEAD
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp
View(data_ishiharaclean)
View(tmp)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_all(any_vars(. %in% c(4, 5, 7)))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_all(any_vars(. %in% c(4, 5, 7)))
tmp
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_all(any_vars(. %in% c("4", "5", "7")))
tmp
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(tmp %>% select(starts_with('R'))), any_vars(. %in% c("4", "5", "7")))
tmp
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(tmp %>% select(starts_with('R'))), any_vars(. %in% c(4, 5, 7)))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(tmp %>% select(starts_with('R'))), any_vars(. %in% c("4", "5", "7")))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(tmp %>% select(starts_with('R'))), any_vars(. %in% c("4", "5", "7")))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(tmp.filter(regex="^R", axis=1)), any_vars(. %in% c("4", "5", "7")))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(select(tmp, starts_with("R"))), any_vars(. %in% c("4", "5", "7")))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(select(tmp, starts_with("R"))), any_vars(. %in% c(4, 5, 7)))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(select(tmp, starts_with("R"))), any_vars(. %in% c(4.0, 5.0, 7.0)))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(select(tmp, contains("R"))), any_vars(. %in% c(4.0, 5.0, 7.0)))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
#tmp %>% filter_at(vars(select(tmp, contains("R"))), any_vars(. %in% c(4.0, 5.0, 7.0)))
tmp
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp[, cols] <- lapply(select(tmp, starts_with("R")), as.factor)
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp[, cols] <- lapply(tmp %>% select(tmp, starts_with("R")), as.factor)
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp[, cols] <- lapply(tmp %>% dplyr::select(tmp, starts_with("R")), as.factor)
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp[, cols] <- lapply(tmp %>% select(tmp, starts_with("R")), as.factor)
#tmp %>% filter_at(vars(select(tmp, contains("R"))), any_vars(. %in% c(4.0, 5.0, 7.0)))
tmp
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(select(tmp, contains("R"))), any_vars(. %in% c(4.0, 5.0, 7.0)))
tmp
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp %>% filter_at(vars(select(tmp, contains("R"))), any_vars(. %in% c(4.0, 5.0, 7.0)))
library(dplyr)
tmp <- subset(data_ishiharaclean, data_ishiharaclean$Richtig == 99) %>% select(-("Datum":"Ishihara Dauer"))
tmp
tmp2 <- tmp[c(1),]
tmp2
tmp2 <- tmp[c(1, 19),]
tmp2
tmp2 <- tmp[c(1, 9, 19),]
tmp2
tmp2 <- tmp[c(1, 5, 9, 19),]
tmp2
tmp2 <- tmp[c(1, 5, 7, 9, 19),]
tmp2
tmp2 <- tmp[c(1, 4, 5, 7, 9, 19),]
tmp2
tmp2 <- tmp[c(1, 4, 5, 7, 9, 11, 12, 15, 17, 19),]
tmp2
View(data_time_config_100)
tmp2 <- tmp[c(1, 4, 5, 7, 9, 11, 12, 15, 17, 19),]
tmp2[tpm2 == 2] <- 6
tmp2 <- tmp[c(1, 4, 5, 7, 9, 11, 12, 15, 17, 19),]
tmp2[tmp2 == 2] <- 6
tmp2
correct <- rbind(data_time_config_100, tmp2)
correct
correct <- rbind(data_time_config_100, tmp2)
correct
tmp2[tmp2 == (4 || 5 || 7)]
#tmp2 <- tmp[c(1, 4, 5, 7, 9, 11, 12, 15, 17, 19),]
#tmp2[tmp2 == 2] <- 6
tmp2
tmp2[tmp == (4 || 5 || 7)]
tmp2[tmp2 == (4 || 5 || 7)]
#tmp2 <- tmp[c(1, 4, 5, 7, 9, 11, 12, 15, 17, 19),]
tmp2[tmp2 == 2] <- 6
tmp2
tmp2 <- tmp[tmp == (4 || 5 || 7)]
#tmp2 <- tmp[c(1, 4, 5, 7, 9, 11, 12, 15, 17, 19),]
tmp2[tmp2 == 2] <- 6
tmp2
tmp2 <- tmp[c(1, 4, 5, 7, 9, 11, 12, 15, 17, 19),]
tmp2[tmp2 == 2] <- 6
tmp2
=======
knitr::opts_chunk$set(echo = TRUE)
source("Skripte/import.R")
source("Skripte/subsets_erstellen.R")
source("Skripte/all_tpt.R")
source("Skripte/util.R")
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "1"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "2"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "3"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "4"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "5"])
#shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "6"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "7"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "8"])
library(car)
#leveneTest(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction)
summary(aov(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction))
data_time_config_long$Reaction <- as.factor(data_time_config_long$Reaction)
TukeyHSD(aov(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction))
shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "1"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "2"])
shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "3"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "4"])
#shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long_100$Reaction == "5"])
shapiro.test(data_time_config_long_100$`Time in ms`[data_time_config_long$Reaction == "6"])
knitr::opts_chunk$set(echo = TRUE)
source("Skripte/import.R")
source("Skripte/subsets_erstellen.R")
source("Skripte/all_tpt.R")
source("Skripte/util.R")
library(car)
library(multcomp)
library(rstatix)
library(ggpubr)
library(datarium)
library(emmeans)
library(tidyverse)
library(stats)
library(ggplot2)
library(knitr)
library(dplyr)
agg1 <- data_time_config_long %>%
group_by(Reaction) %>%
summarize(Mittelwerte = mean(data_time_config_long$`Time in ms`),
Standardabweichungen=sd(data_time_config_long$`Time in ms`),
.groups="keep")
agg1
install.packages('gplots')
library(gplots)
plotmeans(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction, data=data_time_config_long,
xlab="Konfigurationen",
ylab="Zeit in Millisekunden",
col="darkgoldenrod2",
n.label=FALSE,
use.t=TRUE,
barwidth=2,
barcol="darkgoldenrod1",
main='Konfiguration\n95% Konfidenzintervalle')
n1 <- 2387
n2 <- 2406
n3 <- 2422
n4 <- 137
n5 <- 115
n7 <- 76
n8 <- 2457
n <- n1+n2+n3+n4+n5+n7+n8
ybar<- 0.5*(agg1$Mittelwerte[1]
+ agg1$Mittelwerte[2]
+ agg1$Mittelwerte[3]
+ agg1$Mittelwerte[5]
+ agg1$Mittelwerte[6]
+ agg1$Mittelwerte[7]
)
sst <- n1*(agg1$Mittelwerte[1]-ybar)**2
+ n2*(agg1$Mittelwerte[2]-ybar)**2
+ n3*(agg1$Mittelwerte[3]-ybar)**2
+ n4*(agg1$Mittelwerte[4]-ybar)**2
+ n5*(agg1$Mittelwerte[5]-ybar)**2
+ n7*(agg1$Mittelwerte[6]-ybar)**2
+ n8*(agg1$Mittelwerte[7]-ybar)**2
ybar
sst
sse1 <- data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "1"]
sse1 <- sse1 - agg1$Mittelwerte[1]
sse1Sum <- sum(sse1**2)
sse2 <- data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "2"]
sse2 <- sse2 - agg1$Mittelwerte[2]
sse2Sum <- sum(sse2**2)
sse3 <- data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "3"]
sse3 <- sse3 - agg1$Mittelwerte[3]
sse3Sum <- sum(sse3**2)
sse4 <- data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "4"]
sse4 <- sse4 - agg1$Mittelwerte[4]
sse4Sum <- sum(sse4**2)
sse5 <- data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "5"]
sse5 <- sse5 - agg1$Mittelwerte[5]
sse5Sum <- sum(sse5**2)
sse7 <- data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "7"]
sse7 <- sse7 - agg1$Mittelwerte[6]
sse7Sum <- sum(sse7**2)
sse8 <- data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "8"]
sse8 <- sse8 - agg1$Mittelwerte[7]
sse8Sum <- sum(sse8**2)
sse <- sse1Sum+sse2Sum+sse3Sum+sse4Sum+sse5Sum+sse7Sum+sse8Sum
sse
p <- 7
mst <- sst/(p-1)
mst
mse <- sse/(n-p)
mse
f <- mst/mse
f
fquant <- qf(0.95, (p-1), (n-p))
fquant
anova1 <- aov(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction)
summary(anova1)
tukey <- TukeyHSD(anova1)
#par(las=2)
#par(mar=c(5,8,2,4))
plot(tukey,
las=1,
col="darkgoldenrod1")
#library(multcomp)
#par(mar=c(5, 4, 6, 2))
#tukey1 <- glht(anova1, linfct=mcp(data_time_config_long$Reaction="Tukey"))
#plot(cld(tukey1, level=0.05), col="darkgoldenrod1")
library(ggplot2)
pwc <- data_time_config_long %>%
tukey_hsd(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction)
pwc
#pwc <- pwc %>%
#  add_xy_position(x = "data_time_config_long$Reaction")
#ggplot(data=data_time_config_long$Reaction, aes(x=data_time_config_long$Reaction, y = data_time_config_long$`Time in ms`)) +
#  geom_boxplot(fill="darkgoldenrod1", color="black") +
#  stat_pvalue_manual(pwc, hide.ns=FALSE) +
#  labs(
#    title="Paarweise Vergleiche nach Tukey für den Datensatz Data_time_config_long"
#  )
model <- lm(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction, data =data_time_config_long)
ggqqplot(residuals(model), title="Q-Q Plot für den Datensatz Konfiguration (95% Konfidenzniveau)", xlab="Theoretisch", ylab = "Residuen", panel.labs = TRUE)
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "1"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "2"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "3"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "4"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "5"])
#shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "6"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "7"])
shapiro.test(data_time_config_long$`Time in ms`[data_time_config_long$Reaction == "8"])
<<<<<<< Updated upstream
>>>>>>> 607671c2a8a07cf2b74d9f3c94d8cab7444e1473
=======
knitr::opts_chunk$set(echo = TRUE)
library("psych")
library("psych")
describeBy(data_time_config_long$`Time in ms`,data_time_config_long$Reaction)
library("psych")
describeBy(data_time_config_long$Reaction)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
boxplot(data_time_config_long$`Time in ms`)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
boxplot(data_time_config_long$`Time in ms`,data_time_config_long$Reaction`)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
boxplot(data_time_config_long$`Time in ms`,data_time_config_long$Reaction)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
boxplot(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
wilcox.test(data_time_config_long$`Time in ms`, data_time_config_long$Reaction)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
wilcox.test(data_time_config_long$`Time in ms`, data_time_config_long$Reaction, paired= TRUE)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
pairwise.wilcox.test(data_time_config_long$`Time in ms`, data_time_config_long$Reaction, paired= TRUE)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
pairwise.wilcox.test(data_time_config_long$`Time in ms`, data_time_config_long$Reaction)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
pairwise.wilcox.test(data_time_config_long$`Time in ms`, data_time_config_long$Reaction, conf.int = TRUE)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
pairwise.wilcox.test(data_time_config_long$`Time in ms`, data_time_config_long$Reaction,p.adjust="bonferroni", conf.int = TRUE)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
wilcox.test(data_time_config_long$`Time in ms`, data_time_config_long$Reaction, paired=TRUE, exact=FALSE, correct=TRUE,   p.adjust="bonferroni", conf.int = TRUE)
library("psych")
describeBy(data_time_config_long$`Time in ms`)
wilcox.test(data_time_config_long$Reaction, data_time_config_long$`Time in ms`, paired=TRUE, exact=FALSE, correct=TRUE,   p.adjust="bonferroni", conf.int = TRUE)
knitr::opts_chunk$set(echo = TRUE)
friedman.test(data_time_config_long$`Time in ms`,data_time_config_long$Reaction)
View(data_time_config_long)
knitr::opts_chunk$set(echo = TRUE)
# Vorherige Betrachtungen
library("psych")
describeBy(data_time_config_long$`Time in ms`,data_time_config_long$Reaction)
kruskal.test(data_time_config_long$`Time in ms`,data_time_config_long$Reaction,data_time_config_long$R )
>>>>>>> Stashed changes
