data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
data_m <-subset(data, data$'Geschlecht' == 'm')
data_f <-subset(data, data$'Geschlecht' == 'f')
data_ic_11 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == 'unter 11')
data_ic_1120 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '11-20')
data_ic_2130 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '21-30')
data_ic_3140 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '31-40')
data_ic_4150 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '41-50')
data_ic_5160 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '51-60')
data_ic_60 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == 'über 60')
data_11 <-subset(data, data$'Alter' == 'unter 11')
data_1120 <-subset(data, data$'Alter' == '11-20')
data_2130 <-subset(data, data$'Alter' == '21-30')
data_3140 <-subset(data, data$'Alter' == '31-40')
data_4150 <-subset(data, data$'Alter' == '41-50')
data_5160 <-subset(data, data$'Alter' == '51-60')
data_60 <-subset(data, data$'Alter' == 'über 60')
data_ic_iOS <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'iOS')
data_ic_Android <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'Android')
data_iOS <-subset(data, data$'OS' == 'iOS')
data_Android <-subset(data, data$'OS' == 'Android')
data_ic_iOS <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'iOS')
data_ic_Android <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'Android')
data_iOS <-subset(data, data$'OS' == 'iOS')
data_Android <-subset(data, data$'OS' == 'Android')
data_ic_mt <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung' == 'mehrmals täglich')
data_ic_t <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung' == 'täglich')
data_ic_mw <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung' == 'mehrmals die Woche')
data_mt <-subset(data, data$'Smartphone Nutzung' == 'mehrmals täglich')
data_t <-subset(data, data$'Smartphone Nutzung' == 'täglich')
data_mw <-subset(data, data$'Smartphone Nutzung' == 'mehrmals die Woche')
data_ic_ss <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'sehr sicher')
data_ic_s <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'sicher')
data_ic_mm <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'mittelmäßig')
data_ic_u <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'unsicher')
data_ic_su <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'sehr unsicher')
data_ss <-subset(data, data$'Smartphone Nutzungserfahrung' == 'sehr sicher')
data_s <-subset(data, data$'Smartphone Nutzungserfahrung' == 'sicher')
data_mm <-subset(data, data$'Smartphone Nutzungserfahrung' == 'mittelmäßig')
data_u <-subset(data, data$'Smartphone Nutzungserfahrung' == 'unsicher')
data_su <-subset(data, data$'Smartphone Nutzungserfahrung' == 'sehr unsicher')
#Durchschnittliche Zeit pro Aufgabe in Millisekunden
get_tptfv <- function(dataset){
library(dplyr)
name_tpt_dataset <- dataset %>% select(starts_with('Z'))
#Zeit gesamt entfernen
name_tpt_dataset[, 'Zeit gesamt'] <- list(NULL)
#Variable mit der durchschnittlichen Zeit der einzelnen Aufgaben erstellen
mean_tpt_value <-c(colMeans(name_tpt_dataset))
return(mean_tpt_value)
}
#Durchschnittliche Zeit pro Aufgabe in Sekunden
get_tptfvr <- function(dataset){
library(dplyr)
name_tpt_dataset <- dataset %>% select(starts_with('Z'))
#Zeit gesamt entfernen
name_tpt_dataset[, 'Zeit gesamt'] <- list(NULL)
#Variable mit der durchschnittlichen Zeit der einzelnen Aufgaben erstellen
mean_tpt_value <-c(colMeans(name_tpt_dataset)/1000)
return(mean_tpt_value)
}
#Millisekunden
mean_tpt <- get_tptfv(data_ishiharaclean)
#Sekunden
mean_tptr <- get_tptfvr(data_ishiharaclean)
#Millisekunden
mean_tpt_f<- get_tptfv(data_ic_f)
mean_tpt_m<- get_tptfv(data_ic_m)
#Sekunden
mean_tptr_f<- get_tptfvr(data_ic_f)
mean_tptr_m<- get_tptfvr(data_ic_m)
#Millisekunden
mean_tpt_11<- get_tptfv(data_ic_11)
mean_tpt_1120<- get_tptfv(data_ic_1120)
mean_tpt_2130<- get_tptfv(data_ic_2130)
mean_tpt_3140<- get_tptfv(data_ic_3140)
mean_tpt_4150<- get_tptfv(data_ic_4150)
mean_tpt_5160<- get_tptfv(data_ic_5160)
mean_tpt_60<- get_tptfv(data_ic_60)
#Sekunden
mean_tptr_11<- get_tptfvr(data_ic_11)
mean_tptr_1120<- get_tptfvr(data_ic_1120)
mean_tptr_2130<- get_tptfvr(data_ic_2130)
mean_tptr_3140<- get_tptfvr(data_ic_3140)
mean_tptr_4150<- get_tptfvr(data_ic_4150)
mean_tptr_5160<- get_tptfvr(data_ic_5160)
mean_tptr_60<- get_tptfvr(data_ic_60)
#Millisekunden
mean_tpt_iOS<- get_tptfv(data_ic_iOS)
mean_tpt_Android<- get_tptfv(data_ic_Android)
#Sekunden
mean_tptr_iOS<- get_tptfvr(data_ic_iOS)
mean_tptr_Android<- get_tptfvr(data_ic_Android)
#Millisekunden
mean_tpt_mt<- get_tptfv(data_ic_mt)
mean_tpt_t<- get_tptfv(data_ic_t)
##mean_tpt_wt<- get_tptfv(data_ic_wt)
#Sekunden
mean_tptr_mt<- get_tptfvr(data_ic_mt)
mean_tptr_t<- get_tptfvr(data_ic_t)
#mean_tptr_wt<- get_tptfvr(data_ic_wt)
#Millisekunden
mean_tpt_ss<- get_tptfv(data_ic_ss)
mean_tpt_s<- get_tptfv(data_ic_s)
mean_tpt_mm<- get_tptfv(data_ic_mm)
mean_tpt_u<- get_tptfv(data_ic_u)
mean_tpt_su<- get_tptfv(data_ic_su)
#Sekunden
mean_tptr_ss<- get_tptfvr(data_ic_ss)
mean_tptr_s<- get_tptfvr(data_ic_s)
mean_tptr_mm<- get_tptfvr(data_ic_mm)
mean_tptr_u<- get_tptfvr(data_ic_u)
mean_tptr_su<- get_tptfvr(data_ic_su)
#Millisekunden
mean_tpt_mo <- get_tptfv(data_ic_mo)
mean_tpt_a <- get_tptfv(data_ic_a)
mean_tpt_e <- get_tptfv(data_ic_e)
mean_tpt_n <- get_tptfv(data_ic_n)
#Sekunden
mean_tptr_mo <- get_tptfvr(data_ic_mo)
mean_tptr_a <- get_tptfvr(data_ic_a)
mean_tptr_e <- get_tptfvr(data_ic_e)
mean_tptr_n <- get_tptfvr(data_ic_n)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
#Filenamen anpassen
Daten_orig <- read_csv("Daten/Daten_n118.csv",
col_types = cols(Datum = col_date(format = "%d.%m.%Y"),
Uhrzeit = col_time(format = "%H:%M"),
Geschlecht = col_factor(levels = c("f",
"m")), Alter = col_factor(levels = c("unter 11",
"11-20", "21-30", "31-40", "41-50",
"51-60", "über 60")), OS = col_factor(levels = c("iOS",
"Android")), `Smartphone Nutzung` = col_factor(levels = c("mehrmals täglich",
"täglich", "mehrmals die Woche")),
`Smartphone Nutzungserfahrung` = col_factor(levels = c("sehr sicher",
"sicher", "mittelmäßig", "unsicher",
"sehr unsicher")), `Zeit gesamt` = col_time(format = "%H:%M:%OS")))
data_raw <- Daten_orig
drops <- c(107)
data <- data_raw[-drops,]
data_ishiharaclean <-subset(data, data$`Ishihara 3` == 3 & data$`Ishihara 42` == 42 & data$`Ishihara Linien`== 'keine')
data_ishiharafalse <-subset(data, data$`Ishihara 3` != 3 | data$`Ishihara 42` != 42 | data$`Ishihara Linien`!= 'keine')
library(tidyverse)
summary(data_ishiharaclean$'Uhrzeit')
data_ishiharaclean$'Uhrzeit' <- format(as.POSIXct(data_ishiharaclean$'Uhrzeit'), "%H:%M:%S")
data_ic_mo <-subset(data_ishiharaclean, data_ishiharaclean$'Uhrzeit' >= "06:00:00" & data_ishiharaclean$'Uhrzeit'<= "11:59:59")
data_ic_a <-subset(data_ishiharaclean, data_ishiharaclean$'Uhrzeit' >= "12:00:00" & data_ishiharaclean$'Uhrzeit'<= "17:59:59" )
data_ic_e <-subset(data_ishiharaclean, data_ishiharaclean$'Uhrzeit' >= '18:00:00' & data_ishiharaclean$'Uhrzeit'<= '23:59:59')
data_ic_n <-subset(data_ishiharaclean, data_ishiharaclean$'Uhrzeit' >= '00:00:00' & data_ishiharaclean$'Uhrzeit'<= '05:59:59')
data$'Uhrzeit' <- format(as.POSIXct(data$'Uhrzeit'), "%H:%M:%S")
data_mo <-subset(data, data$'Uhrzeit' >= "06:00:00" & data$'Uhrzeit'<= "11:59:59")
data_a <-subset(data, data$'Uhrzeit' >= "12:00:00" & data$'Uhrzeit'<= "17:59:59" )
data_e <-subset(data, data$'Uhrzeit' >= '18:00:00' & data$'Uhrzeit'<= '23:59:59')
data_n <-subset(data, data$'Uhrzeit' >= '00:00:00' & data$'Uhrzeit'<= '05:59:59')
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
data_m <-subset(data, data$'Geschlecht' == 'm')
data_f <-subset(data, data$'Geschlecht' == 'f')
data_ic_11 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == 'unter 11')
data_ic_1120 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '11-20')
data_ic_2130 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '21-30')
data_ic_3140 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '31-40')
data_ic_4150 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '41-50')
data_ic_5160 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == '51-60')
data_ic_60 <-subset(data_ishiharaclean, data_ishiharaclean$'Alter' == 'über 60')
data_11 <-subset(data, data$'Alter' == 'unter 11')
data_1120 <-subset(data, data$'Alter' == '11-20')
data_2130 <-subset(data, data$'Alter' == '21-30')
data_3140 <-subset(data, data$'Alter' == '31-40')
data_4150 <-subset(data, data$'Alter' == '41-50')
data_5160 <-subset(data, data$'Alter' == '51-60')
data_60 <-subset(data, data$'Alter' == 'über 60')
data_ic_iOS <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'iOS')
data_ic_Android <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'Android')
data_iOS <-subset(data, data$'OS' == 'iOS')
data_Android <-subset(data, data$'OS' == 'Android')
data_ic_iOS <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'iOS')
data_ic_Android <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'Android')
data_iOS <-subset(data, data$'OS' == 'iOS')
data_Android <-subset(data, data$'OS' == 'Android')
data_ic_mt <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung' == 'mehrmals täglich')
data_ic_t <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung' == 'täglich')
data_ic_mw <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung' == 'mehrmals die Woche')
data_mt <-subset(data, data$'Smartphone Nutzung' == 'mehrmals täglich')
data_t <-subset(data, data$'Smartphone Nutzung' == 'täglich')
data_mw <-subset(data, data$'Smartphone Nutzung' == 'mehrmals die Woche')
data_ic_ss <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'sehr sicher')
data_ic_s <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'sicher')
data_ic_mm <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'mittelmäßig')
data_ic_u <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'unsicher')
data_ic_su <-subset(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung' == 'sehr unsicher')
data_ss <-subset(data, data$'Smartphone Nutzungserfahrung' == 'sehr sicher')
data_s <-subset(data, data$'Smartphone Nutzungserfahrung' == 'sicher')
data_mm <-subset(data, data$'Smartphone Nutzungserfahrung' == 'mittelmäßig')
data_u <-subset(data, data$'Smartphone Nutzungserfahrung' == 'unsicher')
data_su <-subset(data, data$'Smartphone Nutzungserfahrung' == 'sehr unsicher')
#Durchschnittliche Zeit pro Aufgabe in Millisekunden
get_tptfv <- function(dataset){
library(dplyr)
name_tpt_dataset <- dataset %>% select(starts_with('Z'))
#Zeit gesamt entfernen
name_tpt_dataset[, 'Zeit gesamt'] <- list(NULL)
#Variable mit der durchschnittlichen Zeit der einzelnen Aufgaben erstellen
mean_tpt_value <-c(colMeans(name_tpt_dataset))
return(mean_tpt_value)
}
#Durchschnittliche Zeit pro Aufgabe in Sekunden
get_tptfvr <- function(dataset){
library(dplyr)
name_tpt_dataset <- dataset %>% select(starts_with('Z'))
#Zeit gesamt entfernen
name_tpt_dataset[, 'Zeit gesamt'] <- list(NULL)
#Variable mit der durchschnittlichen Zeit der einzelnen Aufgaben erstellen
mean_tpt_value <-c(colMeans(name_tpt_dataset)/1000)
return(mean_tpt_value)
}
#Millisekunden
mean_tpt <- get_tptfv(data_ishiharaclean)
#Sekunden
mean_tptr <- get_tptfvr(data_ishiharaclean)
#Millisekunden
mean_tpt_f<- get_tptfv(data_ic_f)
mean_tpt_m<- get_tptfv(data_ic_m)
#Sekunden
mean_tptr_f<- get_tptfvr(data_ic_f)
mean_tptr_m<- get_tptfvr(data_ic_m)
#Millisekunden
mean_tpt_11<- get_tptfv(data_ic_11)
mean_tpt_1120<- get_tptfv(data_ic_1120)
mean_tpt_2130<- get_tptfv(data_ic_2130)
mean_tpt_3140<- get_tptfv(data_ic_3140)
mean_tpt_4150<- get_tptfv(data_ic_4150)
mean_tpt_5160<- get_tptfv(data_ic_5160)
mean_tpt_60<- get_tptfv(data_ic_60)
#Sekunden
mean_tptr_11<- get_tptfvr(data_ic_11)
mean_tptr_1120<- get_tptfvr(data_ic_1120)
mean_tptr_2130<- get_tptfvr(data_ic_2130)
mean_tptr_3140<- get_tptfvr(data_ic_3140)
mean_tptr_4150<- get_tptfvr(data_ic_4150)
mean_tptr_5160<- get_tptfvr(data_ic_5160)
mean_tptr_60<- get_tptfvr(data_ic_60)
#Millisekunden
mean_tpt_iOS<- get_tptfv(data_ic_iOS)
mean_tpt_Android<- get_tptfv(data_ic_Android)
#Sekunden
mean_tptr_iOS<- get_tptfvr(data_ic_iOS)
mean_tptr_Android<- get_tptfvr(data_ic_Android)
#Millisekunden
mean_tpt_mt<- get_tptfv(data_ic_mt)
mean_tpt_t<- get_tptfv(data_ic_t)
##mean_tpt_wt<- get_tptfv(data_ic_wt)
#Sekunden
mean_tptr_mt<- get_tptfvr(data_ic_mt)
mean_tptr_t<- get_tptfvr(data_ic_t)
#mean_tptr_wt<- get_tptfvr(data_ic_wt)
#Millisekunden
mean_tpt_ss<- get_tptfv(data_ic_ss)
mean_tpt_s<- get_tptfv(data_ic_s)
mean_tpt_mm<- get_tptfv(data_ic_mm)
mean_tpt_u<- get_tptfv(data_ic_u)
mean_tpt_su<- get_tptfv(data_ic_su)
#Sekunden
mean_tptr_ss<- get_tptfvr(data_ic_ss)
mean_tptr_s<- get_tptfvr(data_ic_s)
mean_tptr_mm<- get_tptfvr(data_ic_mm)
mean_tptr_u<- get_tptfvr(data_ic_u)
mean_tptr_su<- get_tptfvr(data_ic_su)
#Millisekunden
mean_tpt_mo <- get_tptfv(data_ic_mo)
mean_tpt_a <- get_tptfv(data_ic_a)
mean_tpt_e <- get_tptfv(data_ic_e)
mean_tpt_n <- get_tptfv(data_ic_n)
#Sekunden
mean_tptr_mo <- get_tptfvr(data_ic_mo)
mean_tptr_a <- get_tptfvr(data_ic_a)
mean_tptr_e <- get_tptfvr(data_ic_e)
mean_tptr_n <- get_tptfvr(data_ic_n)
knitr::opts_chunk$set(echo = TRUE)
source("Datasets_Subsets.R")
plot(data$Geschlecht, main = "Biologisches Geschlecht", ylab= "Anzahl Personen", ylim=c(0,100))
plot(data_ishiharaclean$Geschlecht, main = "Biologisches ohne Farbfehlsichtigkeit", ylab= "Anzahl Personen", ylim=c(0,100))
plot(data_ishiharafalse$Geschlecht, main = "Biologisches mit Farbfehlsichtigkeit", ylab= "Anzahl Personen", ylim=c(0,25))
plot(data$Alter, main = "Alter", ylab= "Anzahl Personen", ylim=c(0,75))
plot(data_ishiharaclean$Alter, main = "Alter ohne Farbfehlsichtigkeit", ylab= "Anzahl Personen", ylim=c(0,60))
plot(data_ishiharafalse$Alter, main = "Alter mit Farbfehlsichtigkeit", ylab= "Anzahl Personen", ylim=c(0,20))
plot(data$OS, main = "Betriebssystem", ylab= "Anzahl Personen", ylim=c(0,80))
plot(data_ishiharaclean$OS, main = "Betriebssystem bereinigt", ylab= "Anzahl Personen", ylim=c(0,80))
plot(data$'Smartphone Nutzung', main = "Smartphone Nutzungshäufigkeit", ylab= "Anzahl Personen", ylim=c(0,110))
plot(data_ishiharaclean$'Smartphone Nutzung', main = "Smartphone Nutzungshäufigkeit bereinigt", ylab= "Anzahl Personen", ylim=c(0,110))
plot(data$'Smartphone Nutzungserfahrung', main = "Smartphone Nutzungserfahrung", ylab= "Anzahl Personen", ylim=c(0,70))
plot(data_ishiharaclean$'Smartphone Nutzungserfahrung', main = "Smartphone Nutzungserfahrung bereinigt", ylab= "Anzahl Personen", ylim=c(0,70))
plot(data$'Smartphone Nutzungserfahrung', main = "Smartphone Nutzungserfahrung", ylab= "Anzahl Personen", ylim=c(0,70))
plot(data_ishiharaclean$'Smartphone Nutzungserfahrung', main = "Smartphone Nutzungserfahrung bereinigt", ylab= "Anzahl Personen", ylim=c(0,70))
source("util.R")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
#Filenamen anpassen
Daten_orig <- read_csv("Daten/Daten_n49.csv",
col_types = cols(Datum = col_date(format = "%d.%m.%Y"),
Uhrzeit = col_time(format = "%H:%M"),
Geschlecht = col_factor(levels = c("f",
"m")), Alter = col_factor(levels = c("unter 11",
"11-20", "21-30", "31-40", "41-50",
"51-60", "über 60")), OS = col_factor(levels = c("iOS",
"Android")), `Smartphone Nutzung` = col_factor(levels = c("mehrmals täglich",
"täglich", "mehrmals die Woche")),
`Smartphone Nutzungserfahrung` = col_factor(levels = c("sehr sicher",
"sicher", "mittelmäßig", "unsicher",
"sehr unsicher")), `Zeit gesamt` = col_time(format = "%H:%M:%OS")))
data <- Daten_orig
#View(data)
data_ishiharaclean <-subset(data, data$`Ishihara 3` == 3 & data$`Ishihara 42` == 42 & data$`Ishihara Linien`== 'keine')
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
create.histogram.percent(data_ishiharaclean, ~OS, "Verteilung Betriebssystem")
create.histogram.percent(data_ishiharaclean, ~Alter, "Altersverteilung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung', "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung', "Smartphone Nutzungserfahrung")
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Geschlecht"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Falsch`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Falsch`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl falsch beantworteter Aufgaben"),
title = "Verteilung falscher Aufgaben nach Geschlecht"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Geschlecht"
)
fig
data_ic_iOS <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'iOS')
data_ic_Android <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'Android')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_iOS$`Richtig`, name= "iOS")
fig <- fig %>% add_trace(y = data_ic_Android$`Richtig`, name="Android")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Betriebssystem"
)
fig
data_time_config <- data_ishiharaclean
data_time_config <-data_time_config %>% select(-("Datum":"Ishihara Dauer"))
data_time_config_long <- data_time_config %>%
# add row numbers as we need them to keep the order
dplyr::mutate(rn = dplyr::row_number()) %>%
# gather is depricated
tidyr::pivot_longer(-rn, names_to = "colu", values_to = "vals") %>%
# extract number from the column names that now are a column as we need them to keep the order also
dplyr::mutate(nr = readr::parse_number(colu))
data_time_config_long <- data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "Z")) %>%
dplyr::left_join(data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "R")), by = c("rn", "nr")) %>%
# order to get the exact output you are looking for
dplyr::arrange(nr) %>%
# select and rename to get exactout put you a looking vor
dplyr::select(Z = colu.x, `Time in ms` = vals.x, R = colu.y, Reaction = vals.y)
knitr::kable(head(data_time_config_long))
data_time_config_1 <- subset(data_time_config_long, data_time_config_long$Reaction == 1)
data_time_config_2 <- subset(data_time_config_long, data_time_config_long$Reaction == 2)
data_time_config_3 <- subset(data_time_config_long, data_time_config_long$Reaction == 3)
data_time_config_4 <- subset(data_time_config_long, data_time_config_long$Reaction == 4)
data_time_config_5 <- subset(data_time_config_long, data_time_config_long$Reaction == 5)
data_time_config_6 <- subset(data_time_config_long, data_time_config_long$Reaction == 6)
data_time_config_7 <- subset(data_time_config_long, data_time_config_long$Reaction == 7)
data_time_config_8 <- subset(data_time_config_long, data_time_config_long$Reaction == 8)
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_1$`Time in ms`, name="1")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`, name="2")
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`, name="3")
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`, name="4")
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`, name="5")
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`, name="6")
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`, name="7")
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`, name="8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms"),
title = "Boxplots"
)
fig
knitr::opts_chunk$set(echo = TRUE)
anova <- aov(response~treatment, data=data_time_config_long)
knitr::opts_chunk$set(echo = TRUE)
anova <- aov(data_time_config_long$Reaction, data=data_time_config_long)
knitr::opts_chunk$set(echo = TRUE)
anova <- aov(data_time_config_long~Reaction, data=data_time_config_long)
anova <- aov(data_time_config_long~Reaction, data=data_time_config_long)
rm(löschen)
source("util.R")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
#Filenamen anpassen
Daten_orig <- read_csv("Daten/Daten_n49.csv",
col_types = cols(Datum = col_date(format = "%d.%m.%Y"),
Uhrzeit = col_time(format = "%H:%M"),
Geschlecht = col_factor(levels = c("f",
"m")), Alter = col_factor(levels = c("unter 11",
"11-20", "21-30", "31-40", "41-50",
"51-60", "über 60")), OS = col_factor(levels = c("iOS",
"Android")), `Smartphone Nutzung` = col_factor(levels = c("mehrmals täglich",
"täglich", "mehrmals die Woche")),
`Smartphone Nutzungserfahrung` = col_factor(levels = c("sehr sicher",
"sicher", "mittelmäßig", "unsicher",
"sehr unsicher")), `Zeit gesamt` = col_time(format = "%H:%M:%OS")))
data <- Daten_orig
#View(data)
data_ishiharaclean <-subset(data, data$`Ishihara 3` == 3 & data$`Ishihara 42` == 42 & data$`Ishihara Linien`== 'keine')
create.histogram.percent(data_ishiharaclean, ~Geschlecht, "Geschlechterverteilung")
create.histogram.percent(data_ishiharaclean, ~OS, "Verteilung Betriebssystem")
create.histogram.percent(data_ishiharaclean, ~Alter, "Altersverteilung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzung', "Smartphone Nutzung")
create.histogram.percent(data_ishiharaclean, data_ishiharaclean$'Smartphone Nutzungserfahrung', "Smartphone Nutzungserfahrung")
data_ic_m <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'm')
data_ic_f <-subset(data_ishiharaclean, data_ishiharaclean$'Geschlecht' == 'f')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Geschlecht"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Falsch`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Falsch`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl falsch beantworteter Aufgaben"),
title = "Verteilung falscher Aufgaben nach Geschlecht"
)
fig
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_m$`Richtig`, name= "m")
fig <- fig %>% add_trace(y = data_ic_f$`Richtig`, name="w")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Geschlecht"
)
fig
data_ic_iOS <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'iOS')
data_ic_Android <-subset(data_ishiharaclean, data_ishiharaclean$'OS' == 'Android')
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_ic_iOS$`Richtig`, name= "iOS")
fig <- fig %>% add_trace(y = data_ic_Android$`Richtig`, name="Android")
fig <- fig %>% layout(
yaxis = list(title= "Anzahl richtig beantworteter Aufgaben"),
title = "Verteilung richtiger Aufgaben nach Betriebssystem"
)
fig
data_time_config <- data_ishiharaclean
data_time_config <-data_time_config %>% select(-("Datum":"Ishihara Dauer"))
data_time_config_long <- data_time_config %>%
# add row numbers as we need them to keep the order
dplyr::mutate(rn = dplyr::row_number()) %>%
# gather is depricated
tidyr::pivot_longer(-rn, names_to = "colu", values_to = "vals") %>%
# extract number from the column names that now are a column as we need them to keep the order also
dplyr::mutate(nr = readr::parse_number(colu))
data_time_config_long <- data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "Z")) %>%
dplyr::left_join(data_time_config_long %>%
dplyr::filter(stringr::str_detect(colu, "R")), by = c("rn", "nr")) %>%
# order to get the exact output you are looking for
dplyr::arrange(nr) %>%
# select and rename to get exactout put you a looking vor
dplyr::select(Z = colu.x, `Time in ms` = vals.x, R = colu.y, Reaction = vals.y)
knitr::kable(head(data_time_config_long))
data_time_config_1 <- subset(data_time_config_long, data_time_config_long$Reaction == 1)
data_time_config_2 <- subset(data_time_config_long, data_time_config_long$Reaction == 2)
data_time_config_3 <- subset(data_time_config_long, data_time_config_long$Reaction == 3)
data_time_config_4 <- subset(data_time_config_long, data_time_config_long$Reaction == 4)
data_time_config_5 <- subset(data_time_config_long, data_time_config_long$Reaction == 5)
data_time_config_6 <- subset(data_time_config_long, data_time_config_long$Reaction == 6)
data_time_config_7 <- subset(data_time_config_long, data_time_config_long$Reaction == 7)
data_time_config_8 <- subset(data_time_config_long, data_time_config_long$Reaction == 8)
fig <- plot_ly(type = "box")
fig <- fig %>% add_trace(y = data_time_config_1$`Time in ms`, name="1")
fig <- fig %>% add_trace(y = data_time_config_2$`Time in ms`, name="2")
fig <- fig %>% add_trace(y = data_time_config_3$`Time in ms`, name="3")
fig <- fig %>% add_trace(y = data_time_config_4$`Time in ms`, name="4")
fig <- fig %>% add_trace(y = data_time_config_5$`Time in ms`, name="5")
fig <- fig %>% add_trace(y = data_time_config_6$`Time in ms`, name="6")
fig <- fig %>% add_trace(y = data_time_config_7$`Time in ms`, name="7")
fig <- fig %>% add_trace(y = data_time_config_8$`Time in ms`, name="8")
fig <- fig %>% layout(
yaxis = list(title= "Zeit in ms"),
title = "Boxplots"
)
fig
anova <- aov(data_time_config_long~Reaction, data=data_time_config_long)
View(data_time_config_long)
anova <- aov(response ~ Reaction, data=data_time_config_long)
summary(aov(data_time_config_long$`Time in ms` ~ data_time_config_long$Reaction))
#anova <- aov(response ~ Reaction, data=data_time_config_long)
#summary(anova)
View(data_time_config_6)
save.image("~/Documents/GitHub/mef/MEF/21_07_15.RData")
